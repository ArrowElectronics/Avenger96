From d0e5b3a95f43e7eb7ae3a8037f982ab9dbff89f1 Mon Sep 17 00:00:00 2001
From: Anil Dsouza <anil.dsouza@einfochips.com>
Date: Wed, 19 Jan 2022 13:33:07 +0530
Subject: [PATCH] media: i2c: ap1320: Removed few more unused AP1302 controls

Following v4l2 controls for AP1302 are removed
1. Exposure metering
2. White balance modes (except auto and manual mode)

Change-Id: Idffd62d11a864d1dab5eb6bac6674d952eeef306
Signed-off-by: Anil Dsouza <anil.dsouza@einfochips.com>
---
 drivers/media/i2c/ap1302.c | 32 +-------------------------------
 1 file changed, 1 insertion(+), 31 deletions(-)

diff --git a/drivers/media/i2c/ap1302.c b/drivers/media/i2c/ap1302.c
index 3198f3b14..0a5bac91e 100644
--- a/drivers/media/i2c/ap1302.c
+++ b/drivers/media/i2c/ap1302.c
@@ -1348,14 +1348,6 @@ static int ap1302_set_mipi_t3_clk(struct ap1302_device *ap1302)
 static u16 ap1302_wb_values[] = {
 	AP1302_AWB_CTRL_MODE_OFF,	/* V4L2_WHITE_BALANCE_MANUAL */
 	AP1302_AWB_CTRL_MODE_AUTO,	/* V4L2_WHITE_BALANCE_AUTO */
-	AP1302_AWB_CTRL_MODE_A,		/* V4L2_WHITE_BALANCE_INCANDESCENT */
-	AP1302_AWB_CTRL_MODE_D50,	/* V4L2_WHITE_BALANCE_FLUORESCENT */
-	AP1302_AWB_CTRL_MODE_D65,	/* V4L2_WHITE_BALANCE_FLUORESCENT_H */
-	AP1302_AWB_CTRL_MODE_HORIZON,	/* V4L2_WHITE_BALANCE_HORIZON */
-	AP1302_AWB_CTRL_MODE_D65,	/* V4L2_WHITE_BALANCE_DAYLIGHT */
-	AP1302_AWB_CTRL_MODE_AUTO,	/* V4L2_WHITE_BALANCE_FLASH */
-	AP1302_AWB_CTRL_MODE_D75,	/* V4L2_WHITE_BALANCE_CLOUDY */
-	AP1302_AWB_CTRL_MODE_D75,	/* V4L2_WHITE_BALANCE_SHADE */
 };
 
 static int ap1302_set_wb_mode(struct ap1302_device *ap1302, s32 mode)
@@ -1370,11 +1362,6 @@ static int ap1302_set_wb_mode(struct ap1302_device *ap1302, s32 mode)
 	val &= ~AP1302_AWB_CTRL_MODE_MASK;
 	val |= ap1302_wb_values[mode];
 
-	if (mode == V4L2_WHITE_BALANCE_FLASH)
-		val |= AP1302_AWB_CTRL_FLASH;
-	else
-		val &= ~AP1302_AWB_CTRL_FLASH;
-
 	return ap1302_write(ap1302, AP1302_AWB_CTRL, val, NULL);
 }
 
@@ -1393,11 +1380,6 @@ static int ap1302_set_exposure(struct ap1302_device *ap1302, s32 mode)
 	return ap1302_write(ap1302, AP1302_AE_CTRL, val, NULL);
 }
 
-static int ap1302_set_exp_met(struct ap1302_device *ap1302, s32 val)
-{
-	return ap1302_write(ap1302, AP1302_AE_MET, val, NULL);
-}
-
 static int ap1302_set_gain(struct ap1302_device *ap1302, s32 val)
 {
 	return ap1302_write(ap1302, AP1302_AE_MANUAL_GAIN, val, NULL);
@@ -1434,9 +1416,6 @@ static int ap1302_s_ctrl(struct v4l2_ctrl *ctrl)
 	case V4L2_CID_EXPOSURE:
 		return ap1302_set_exposure(ap1302, ctrl->val);
 
-	case V4L2_CID_EXPOSURE_METERING:
-		return ap1302_set_exp_met(ap1302, ctrl->val);
-
 	case V4L2_CID_GAIN:
 		return ap1302_set_gain(ap1302, ctrl->val);
 
@@ -1469,7 +1448,7 @@ static const struct v4l2_ctrl_config ap1302_ctrls[] = {
 		.ops = &ap1302_ctrl_ops,
 		.id = V4L2_CID_AUTO_N_PRESET_WHITE_BALANCE,
 		.min = 0,
-		.max = 9,
+		.max = 1,
 		.def = 1,
 	}, {
 		.ops = &ap1302_ctrl_ops,
@@ -1516,15 +1495,6 @@ static const struct v4l2_ctrl_config ap1302_ctrls[] = {
 		.max = 0xC,
 		.step = 1,
 		.def = 0xC,
-	}, {
-		.ops = &ap1302_ctrl_ops,
-		.id = V4L2_CID_EXPOSURE_METERING,
-		.name = "Exposure Metering",
-		.type = V4L2_CTRL_TYPE_INTEGER,
-		.min = 0x0,
-		.max = 0x3,
-		.step = 1,
-		.def = 0x1,
 	}, {
 		.ops = &ap1302_ctrl_ops,
 		.id = V4L2_CID_GAIN,
-- 
2.17.1

